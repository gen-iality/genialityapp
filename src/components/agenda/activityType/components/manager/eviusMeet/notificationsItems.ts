export const notificationsItems = [
	{ key: 'connection.CONNFAIL', label: 'shown when the connection fails,' },
	{ key: 'dialog.cameraNotSendingData', label: "shown when there's no feed from user's camera" },
	{ key: 'dialog.kickTitle', label: 'shown when user has been kicked' },
	{ key: 'dialog.liveStreaming', label: 'livestreaming notifications (pending, on, off, limits)' },
	{ key: 'dialog.lockTitle', label: 'shown when setting conference password fails' },
	{ key: 'dialog.maxUsersLimitReached', label: 'shown when maximmum users limit has been reached' },
	{ key: 'dialog.micNotSendingData', label: "shown when user's mic is not sending any audio" },
	{
		key: 'dialog.passwordNotSupportedTitle',
		label: 'shown when setting conference password fails due to password format',
	},
	{ key: 'dialog.recording', label: 'recording notifications (pending, on, off, limits)' },
	{ key: 'dialog.remoteControlTitle', label: 'remote control notifications (allowed, denied, start, stop, error)' },
	{ key: 'dialog.reservationError', label: '' },
	{ key: 'dialog.serviceUnavailable', label: 'shown when server is not reachable' },
	{ key: 'dialog.sessTerminated', label: 'shown when there is a failed conference session' },
	{ key: 'dialog.sessionRestarted', label: 'show when a client reload is initiated because of bridge migration' },
	{ key: 'dialog.tokenAuthFailed', label: 'show when an invalid jwt is used' },
	{ key: 'dialog.transcribing', label: 'transcribing notifications (pending, off)' },
	{ key: 'dialOut.statusMessage', label: 'shown when dial out status is updated.' },
	{ key: 'liveStreaming.busy', label: 'shown when livestreaming service is busy' },
	{ key: 'liveStreaming.failedToStart', label: 'shown when livestreaming fails to start' },
	{ key: 'liveStreaming.unavailableTitle', label: 'shown when livestreaming service is not reachable' },
	{ key: 'lobby.joinRejectedMessage', label: "shown when while in a lobby, user's request to join is rejected" },
	{ key: 'lobby.notificationTitle', label: 'shown when lobby is toggled and when join requests are allowed / denied' },
	{ key: 'notify.chatMessages', label: 'shown when receiving chat messages while the chat window is closed' },
	{ key: 'notify.disconnected', label: 'shown when a participant has left' },
	{ key: 'notify.connectedOneMember', label: 'show when a participant joined' },
	{ key: 'notify.connectedTwoMembers', label: 'show when two participants joined simultaneously' },
	{ key: 'notify.connectedThreePlusMembers', label: 'show when more than 2 participants joined simultaneously' },
	{ key: 'notify.leftOneMember', label: 'show when a participant left' },
	{ key: 'notify.leftTwoMembers', label: 'show when two participants left simultaneously' },
	{ key: 'notify.leftThreePlusMembers', label: 'show when more than 2 participants left simultaneously' },
	{ key: 'notify.grantedTo', label: 'shown when moderator rights were granted to a participant' },
	{ key: 'notify.hostAskedUnmute', label: 'shown to participant when host asks them to unmute' },
	{ key: 'notify.invitedOneMember', label: 'shown when 1 participant has been invited' },
	{ key: 'notify.invitedThreePlusMembers', label: 'shown when 3+ participants have been invited' },
	{ key: 'notify.invitedTwoMembers', label: 'shown when 2 participants have been invited' },
	{ key: 'notify.kickParticipant', label: 'shown when a participant is kicked' },
	{ key: 'notify.linkToSalesforce', label: 'shown when joining a meeting with salesforce integration' },
	{ key: 'notify.moderationStartedTitle', label: 'shown when AV moderation is activated' },
	{ key: 'notify.moderationStoppedTitle', label: 'shown when AV moderation is deactivated' },
	{ key: 'notify.moderationInEffectTitle', label: 'shown when user attempts to unmute audio during AV moderation' },
	{
		key: 'notify.moderationInEffectVideoTitle',
		label: 'shown when user attempts to enable video during AV moderation',
	},
	{ key: 'notify.moderationInEffectCSTitle', label: 'shown when user attempts to share content during AV moderation' },
	{ key: 'notify.mutedRemotelyTitle', label: 'shown when user is muted by a remote party' },
	{ key: 'notify.mutedTitle', label: 'shown when user has been muted upon joining,' },
	{ key: 'notify.newDeviceAudioTitle', label: 'prompts the user to use a newly detected audio device' },
	{ key: 'notify.newDeviceCameraTitle', label: 'prompts the user to use a newly detected camera' },
	{
		key: 'notify.participantWantsToJoin',
		label: 'shown when lobby is enabled and participant requests to join meeting',
	},
	{ key: 'notify.passwordRemovedRemotely', label: 'shown when a password has been removed remotely' },
	{ key: 'notify.passwordSetRemotely', label: 'shown when a password has been set remotely' },
	{ key: 'notify.raisedHand', label: 'shown when a partcipant used raise hand,' },
	{ key: 'notify.startSilentTitle', label: 'shown when user joined with no audio' },
	{ key: 'notify.unmute', label: 'shown to moderator when user raises hand during AV moderation' },
	{ key: 'notify.videoMutedRemotelyTitle', label: "shown when user's video is muted by a remote party," },
	{ key: 'prejoin.errorDialOut', label: '' },
	{ key: 'prejoin.errorDialOutDisconnected', label: '' },
	{ key: 'prejoin.errorDialOutFailed', label: '' },
	{ key: 'prejoin.errorDialOutStatus', label: '' },
	{ key: 'prejoin.errorStatusCode', label: '' },
	{ key: 'prejoin.errorValidation', label: '' },
	{ key: 'recording.busy', label: 'shown when recording service is busy' },
	{ key: 'recording.failedToStart', label: 'shown when recording fails to start' },
	{ key: 'recording.unavailableTitle', label: 'shown when recording service is not reachable' },
	{ key: 'toolbar.noAudioSignalTitle', label: 'shown when a broken mic is detected' },
	{ key: 'toolbar.noisyAudioInputTitle', label: 'shown when noise is detected for the current microphone' },
	{ key: 'toolbar.talkWhileMutedPopup', label: 'shown when user tries to speak while muted' },
	{ key: 'transcribing.failedToStart', label: 'shown when transcribing fails to start' },
];
