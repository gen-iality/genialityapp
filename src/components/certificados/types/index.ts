// Generated by https://quicktype.io

import certificado from "../certificado";

export interface CertificatesProps {
    event:         Event;
    matchUrl:      string;
    history:       History;
    location:      Location;
    match:         Match;
    path:          string;
    componentKey:  string;
    computedMatch: Match;
}

export interface Match {
    path:    string;
    url:     string;
    isExact: boolean;
    params:  Params;
}

export interface Params {
}

export interface Event {
    _id:                   string;
    name:                  string;
    address:               string;
    datetime_from:         string;
    datetime_to:           string;
    picture:               null;
    venue:                 null;
    location:              null;
    visibility:            string;
    description:           null;
    allow_register:        boolean;
    type_event:            string;
    where_it_run:          string;
    url_external:          null;
    styles:                Styles;
    author_id:             string;
    organizer_id:          string;
    updated_at:            string;
    created_at:            string;
    user_properties:       UserProperty[];
    itemsMenu:             { [key: string]: ItemsMenu };
    countdownFinalMessage: string;
    countdownMessage:      string;
    dateLimit:             string;
    useCountdown:          boolean;
    bingo:                 boolean;
    dynamics:              Dynamics;
    author:                { [key: string]: string };
    categories:            any[];
    event_type:            null;
    organiser:             Organi;
    organizer:             Organi;
    currency:              Currency;
    tickets:               any[];
    hour_start:            string;
    hour_end:              string;
    date_start:            string;
    date_end:              string;
}

export interface Currency {
    _id:            string;
    id:             number;
    title:          string;
    symbol_left:    string;
    symbol_right:   string;
    code:           string;
    decimal_place:  number;
    value:          number;
    decimal_point:  string;
    thousand_point: string;
    status:         number;
    created_at:     string;
    updated_at:     string;
}

export interface Dynamics {
    bingo: boolean;
}

export interface ItemsMenu {
    name:        string;
    position:    number;
    section:     string;
    icon:        string;
    checked:     boolean;
    label?:      null;
    permissions: Permissions;
    markup?:     null;
}

export enum Permissions {
    Public = "public",
}

export interface Organi {
    _id:             string;
    name:            string;
    styles:          Styles;
    author:          string;
    updated_at:      string;
    created_at:      string;
    itemsMenu:       OrganiserItemsMenu;
    user_properties: UserProperty[];
}

export interface OrganiserItemsMenu {
    evento: ItemsMenu;
    agenda: ItemsMenu;
}

export interface Styles {
    buttonColor:         string;
    banner_color:        string;
    menu_color:          string;
    event_image:         null | string;
    banner_image:        null | string;
    menu_image:          null;
    banner_image_email:  null;
    footer_image_email:  string;
    brandPrimary:        string;
    brandSuccess:        string;
    brandInfo:           string;
    brandDanger:         string;
    containerBgColor:    string;
    brandWarning:        string;
    toolbarDefaultBg:    string;
    brandDark:           string;
    brandLight:          string;
    textMenu:            string;
    activeText:          string;
    bgButtonsEvent:      string;
    BackgroundImage:     null | string;
    FooterImage:         null;
    banner_footer:       null | string;
    mobile_banner:       null;
    banner_footer_email: null;
    show_banner:         string;
    show_card_banner:    boolean;
    show_inscription:    boolean;
    hideDatesAgenda:     boolean;
    hideDatesAgendaItem: boolean;
    hideHoursAgenda:     boolean;
    hideBtnDetailAgenda: boolean;
    loader_page:         string;
    data_loader_page:    null;
    show_title?:         boolean;
}

export interface UserProperty {
    name:       string;
    label:      string;
    unique:     boolean;
    mandatory:  boolean;
    type:       string;
    updated_at: AtedAt;
    created_at: AtedAt;
    _id:        ID;
}

export interface ID {
    $oid: string;
}

export interface AtedAt {
    $date: DateClass;
}

export interface DateClass {
    $numberLong: string;
}

export interface History {
    length:   number;
    action:   string;
    location: Location;
}

export interface Location {
    pathname: string;
    search:   string;
    hash:     string;
    state:    State;
    key:      string;
}

export interface State {
    new: boolean;
    edit?: string
}

export interface ICertificado {
    content: string;
    imageFile: any;
    imageData: any;
    image: any
    rol?: any ;
    name?: string;
}

export  type RowCert = 'break' | 'h1' | 'h2' | 'h3' | 'h4' | 'text'

export interface CertifiRow {
    type: RowCert,
    times?:  number,
    content?: string,
}