import { useContext } from 'react';
import MillonaireCMSContext from '../contexts/MillonaireCMSContext';
export const useMillonaireCMS = () => {
  const {
    event,
    millonaire,
    loading,
    isNewGame,
    question,
    answer,
    stage,
    isVisibleModalQuestion,
    isVisibleModalStage,
    isEditStage,
    isEditAnswer,
    isEditQuestion,
    isVisibleModalAnswer,
    isVisibleModalAnswerList,
    previusStage,
    laterStage,
    published,
    active,
    scores,
    tab,
    answers,
    isVisibleModalImport,
    enableSaveButton,
    preserveInformation,
    setImportData,
    setPreserveInformation,
    onChangeAppearance,
    onChangeMillonaire,
    onSubmit,
    onDelete,
    onSaveQuestion,
    onSaveStage,
    onCancelModalStage,
    onCancelModalQuestion,
    setIsVisibleModalQuestion,
    setIsVisibleModalStage,
    onChangeQuestion,
    onSaveAnswerInQuestion,
    onChangeAnswer,
    onChangeStage,
    onDeleteQuestion,
    onDeleteStage,
    onActionEditQuestion,
    onActionEditAnwser,
    onSubmitAnswer,
    onSubmitStage,
    onSubmitQuestion,
    onDeleteAnswer,
    onChangeVisibleModalAnswer,
    onChangeVisibleModalAnswerList,
    onActiveModalStage,
    onActionEditStage,
    onChangeVisibilityControl,
    onResetProgressAll,
    onChangeTab,
    onChangeAnswerFour,
    onSaveAnswerFour,
    onActiveModalImport,
    onHandleXlsx,
    onSaveDataImport,
    setEnableSaveButton,
  } = useContext(MillonaireCMSContext);

  return {
    event,
    loading,
    millonaire,
    isNewGame,
    stage,
    question,
    answer,
    isVisibleModalQuestion,
    isVisibleModalStage,
    isEditStage,
    isEditAnswer,
    isEditQuestion,
    isVisibleModalAnswerList,
    isVisibleModalAnswer,
    previusStage,
    laterStage,
    published,
    active,
    tab,
    scores,
    answers,
    isVisibleModalImport,
    enableSaveButton,
    preserveInformation,
    setImportData,
    setPreserveInformation,
    onChangeMillonaire,
    onChangeAppearance,
    onSubmit,
    onDelete,
    onSaveQuestion,
    onSaveStage,
    onChangeStage,
    onCancelModalStage,
    onCancelModalQuestion,
    setIsVisibleModalQuestion,
    setIsVisibleModalStage,
    onChangeQuestion,
    onSaveAnswerInQuestion,
    onChangeAnswer,
    onDeleteQuestion,
    onDeleteStage,
    onActionEditQuestion,
    onActionEditAnwser,
    onSubmitAnswer,
    onSubmitStage,
    onSubmitQuestion,
    onDeleteAnswer,
    onChangeVisibleModalAnswer,
    onChangeVisibleModalAnswerList,
    onActiveModalStage,
    onActionEditStage,
    onChangeVisibilityControl,
    onResetProgressAll,
    onChangeTab,
    onChangeAnswerFour,
    onSaveAnswerFour,
    onActiveModalImport,
    onHandleXlsx,
    onSaveDataImport,
    setEnableSaveButton,
  };
};
